// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Unknown />,
        <div
          className="container asset-builder"
>
          <div
                    className="row"
          >
                    <div
                              className="col-4"
                    >
                              <Unknown />
                    </div>
                    <div
                              className="col-8"
                    >
                              <Unknown />
                              <h2>
                                        Learning Assets Preview
                              </h2>
                              <Unknown />
                    </div>
          </div>
</div>,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(Component)",
          "type": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row"
>
            <div
                        className="col-4"
            >
                        <Unknown />
            </div>
            <div
                        className="col-8"
            >
                        <Unknown />
                        <h2>
                                    Learning Assets Preview
                        </h2>
                        <Unknown />
            </div>
</div>,
          "className": "container asset-builder",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="col-4"
>
                <Unknown />
</div>,
              <div
                className="col-8"
>
                <Unknown />
                <h2>
                                Learning Assets Preview
                </h2>
                <Unknown />
</div>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Unknown />,
                "className": "col-4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "displayName": "Connect(Component)",
                  "type": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Unknown />,
                  <h2>
                    Learning Assets Preview
</h2>,
                  <Unknown />,
                ],
                "className": "col-8",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(JokesView)",
                    "type": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Learning Assets Preview",
                  },
                  "ref": null,
                  "rendered": "Learning Assets Preview",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(Component)",
                    "type": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown />,
          <div
            className="container asset-builder"
>
            <div
                        className="row"
            >
                        <div
                                    className="col-4"
                        >
                                    <Unknown />
                        </div>
                        <div
                                    className="col-8"
                        >
                                    <Unknown />
                                    <h2>
                                                Learning Assets Preview
                                    </h2>
                                    <Unknown />
                        </div>
            </div>
</div>,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(Component)",
            "type": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row"
>
              <div
                            className="col-4"
              >
                            <Unknown />
              </div>
              <div
                            className="col-8"
              >
                            <Unknown />
                            <h2>
                                          Learning Assets Preview
                            </h2>
                            <Unknown />
              </div>
</div>,
            "className": "container asset-builder",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-4"
>
                  <Unknown />
</div>,
                <div
                  className="col-8"
>
                  <Unknown />
                  <h2>
                                    Learning Assets Preview
                  </h2>
                  <Unknown />
</div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Unknown />,
                  "className": "col-4",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(Component)",
                    "type": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Unknown />,
                    <h2>
                      Learning Assets Preview
</h2>,
                    <Unknown />,
                  ],
                  "className": "col-8",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.memo),
                      "WrappedComponent": [Function],
                      "compare": null,
                      "displayName": "Connect(JokesView)",
                      "type": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Learning Assets Preview",
                    },
                    "ref": null,
                    "rendered": "Learning Assets Preview",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": Object {
                      "$$typeof": Symbol(react.memo),
                      "WrappedComponent": [Function],
                      "compare": null,
                      "displayName": "Connect(Component)",
                      "type": [Function],
                      Symbol(Symbol.hasInstance): [Function],
                    },
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
